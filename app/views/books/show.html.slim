- model_class = Book
.row-fluid.book
  .span3
    .book-sidebar
      .book-cover
        == image_tag(@book.cover_url)
      ul.unstyled
        /*li= format_tags @book.tags*/
        li= format_tags @book.tag_list
        -if can? :update, @book
          li
            i.icon-edit
            = link_to t('helpers.links.edit'), edit_book_path(@book)
        -if can? :destroy, @book
          li
            i.icon-remove
            = link_to t('helpers.links.destroy'), @book, method: :delete, data: { confirm: t('helpers.links.confirm') }
        - if current_user
          - if current_user.likes? @book
            li
              i.icon-remove
              = unlike_link_for @book
          - else
            li
              i.icon-edit
              = like_link_for @book
  .span9
    header
      h1 = @book.name

    .book-detail
      table.table.table-striped.table-bordered
        tbody
          tr
            td.span2= model_class.human_attribute_name(:author)
            td= format_labels @book.author_list, "info", "author"
          - unless @book.translators.blank?
            tr
              td.span2= model_class.human_attribute_name(:translator)
              td= format_labels @book.translator_list, '', "translator"
          tr
            td.span2= model_class.human_attribute_name(:tag)
            td= format_labels @book.tag_list, "important"
          - unless @book.publishing_house.blank?
            tr
              td.span2= model_class.human_attribute_name(:publishing_house)
              td= @book.publishing_house
          - unless @book.pages.blank?
            tr
              td.span2= model_class.human_attribute_name(:pages)
              td= @book.pages
          - unless @book.ISBN.blank?
            tr
              td.span2= model_class.human_attribute_name(:ISBN)
              td= @book.ISBN

    .book-content
      h2= model_class.human_attribute_name(:content)
      .well
        = simple_format @book.content

    .book-resources
      .masthead
        - if can? :create, Resource
          ul.nav.nav-pills.pull-right
            li= link_to t("helpers.links.add_resource"), new_resource_path(:book_id => @book)
        h2.muted= model_class.human_attribute_name(:resources)
      table.table.table-striped
        tbody
          - @book.resources.each do |resource|
            tr[id='#{dom_id(resource)}']
              td= resource.try(:attachment).try(:file_name)
              td
                b= resource.try(:attachment).try(:file_type)
              td= number_to_human_size resource.try(:attachment).try(:file_size)
              td= link_to t("helpers.links.hyperlink"), resource.try(:attachment).try(:attachment).try(:url), class: "btn btn-mini btn-success", target: "_blank"
              td= link_to '&times;'.html_safe, resource, method: :delete, remote: true, :class => 'close' if can? :destroy, resource

    .book-comments
      = render "shared/uyan_js", :su => "/books/#{@book.id}"
